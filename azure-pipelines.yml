# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

stages:
- stage: Build
  jobs:
  - job: BuildLambdaFunction
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec:  '12.x'
        displayName: 'Iinstall Node.js'
      - task: DockerInstaller@0
        displayName: Docker Installer
      - script: |
          npm install
          npm install -g https://artifactory.app.protego.io/cloudguard-serverless-plugin.tgz
          docker run hello-world
        displayName: 'NPM install, Cloudguard Workload Plugin install'
      - script: |
          export D9TOKEN=$(D9TOKEN_PARAM)
          echo {$D9TOKEN} >> cloudguard-config.json
        displayName: 'Set environment variables'
      - script: |
          cloudguard proact -m template.yml
          cloudguard fsp -C template.yml --region $(AWS_REGION)
        displayName: 'Run CloudGuard Workload Protection and Enable FSP'
